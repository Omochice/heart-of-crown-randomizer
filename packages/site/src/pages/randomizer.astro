<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <title></title>
  </head>
  <body>
    <h1>Randomizer</h1>
    <form
      action="#"
      id="option-form"
    >
      <button id="submit-button">ランダマイズ</button>
    </form>
    <div id="result"></div>
    <script>
      import { commons as basic } from "@heart-of-crown-randomizer/card/basic/common";
      import { commons as farEasternBorder } from "@heart-of-crown-randomizer/card/far-eastern-border/common";
      import type { CommonCard } from "@heart-of-crown-randomizer/card/type";
      import { rules } from "../rules/index";

      const cards: CommonCard[] = [...basic, ...farEasternBorder];

      function addOptions() {
        const form = document.querySelector("#option-form");
        if (form == null) {
          console.error("form is not found");
          return;
        }
        const button = document.querySelector("#submit-button");
        if (button == null) {
          console.error("button is not found");
          return;
        }
        for (const r of rules) {
          const div = document.createElement("div");
          const input = document.createElement("input");
          input.type = "checkbox";
          input.name = r.description;
          const label = document.createElement("label");
          label.textContent = r.description;
          div.appendChild(input);
          div.appendChild(label);
          form.insertBefore(div, button);
        }
      }

      function randint(max: number): number {
        return Math.floor(Math.random() * Math.floor(max));
      }
      function getRandomCards(): CommonCard[] {
        const cardIndexes = new Set<number>();
        while (cardIndexes.size < 10) {
          cardIndexes.add(randint(cards.length));
        }
        return Array.from(cardIndexes).map((index) => cards[index]!);
      }

      function clearChild(element: HTMLElement): void {
        while (element.firstChild) {
          element.removeChild(element.firstChild);
        }
      }

      addOptions();

      document
        .querySelector<HTMLFormElement>("#option-form")
        ?.addEventListener("submit", (e: SubmitEvent) => {
          e.preventDefault();
          const result = document.getElementById("result");
          if (result == null) {
            console.error("button is not found");
            return;
          }
          const enabledRules = rules.filter((r) => {
            const input = document.querySelector<HTMLInputElement>(
              `input[name="${r.description}"]`,
            );
            if (input == null) {
              return false;
            }
            return input.checked;
          });
          clearChild(result);
          const accepts = (() => {
            for (let i = 0; i < 10; i++) {
              const cards = getRandomCards();
              if (enabledRules.every((r) => r.expr(cards))) {
                return cards;
              }
            }
            return undefined;
          })();

          if (accepts === undefined) {
            const errorText = document.createElement("p");
            errorText.textContent = "条件に合うカードが見つかりませんでした";
            result.appendChild(errorText);
            return;
          }

          for (const card of accepts) {
            const cardWrapper = document.createElement("div");
            const anchor = document.createElement("a");
            anchor.href = `../cards/${card!.id}`;
            anchor.textContent = card.name;
            cardWrapper.appendChild(anchor);
            result.appendChild(cardWrapper);
          }
        });
    </script>
  </body>
</html>
